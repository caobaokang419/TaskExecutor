<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent" android:layout_height="match_parent" android:gravity="top|center_horizontal" android:orientation="vertical">
	<ScrollView android:layout_margin="12dip" android:layout_height="150dip" android:layout_width="match_parent">
		<TextView android:text="The below buttons execute the predefined test.taskexecutor.tasks.PostTask example in the library with several different simple Bundles. You can extend Task anyway you'd like, but make sure it's public and static, anonymous implementations won't work. Tasks are executed on a ThreadPoolExecutor, and are managed primarily by the Activity lifecycle, and the Service MODE can be set to be considerate of Activity availability. Tasks optionally take a hard callback to post back to the ui thread in the current activity. Tasks can gracefully pause and resume, can be considerate of onConfigurationChanges, and even will handle process termination. Please review the example activity test.taskexecutor.Example to see how the current implementation is configured.\n\n With fully robust javadoc, and a cleanly implemented example activity implementation should be straight forward. Since I'm designing this library for personal use, I greatly welcome feedback and I guarantee you'll be surprised how fast I address issues :-)" android:layout_width="match_parent" android:layout_height="wrap_content" />
    </ScrollView>
    <Button android:id="@+id/http_get_test_button" android:text="Http Get Request" android:layout_width="wrap_content" android:layout_height="wrap_content"/>
	<Button android:id="@+id/http_exception_test_button" android:text="Http Exception Test" android:layout_width="wrap_content" android:layout_height="wrap_content"/>
	<Button android:id="@+id/http_delayed_get_test_button" android:text="Http Delayed Get Test" android:layout_width="wrap_content" android:layout_height="wrap_content"/>
	<Button android:id="@+id/twenty_sec_http_delayed_get_test_button" android:text="20 Sec Http Delayed Get Test" android:layout_width="wrap_content" android:layout_height="wrap_content"/>
	<Button android:layout_marginTop="25dip" android:id="@+id/execute" android:text="Execute Queued Tasks" android:layout_width="wrap_content" android:layout_height="wrap_content"/>
	<Button android:id="@+id/kill_example" android:text="Kill Application Process" android:layout_width="wrap_content" android:layout_height="wrap_content"/>
</LinearLayout>
