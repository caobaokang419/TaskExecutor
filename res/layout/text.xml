<?xml version="1.0" encoding="utf-8"?>
<TextView xmlns:android="http://schemas.android.com/apk/res/android" 
          android:text="The below buttons execute the predefined GetTask example in the library. You can extend Task anyway you'd like, but make sure it's public and static, anonymous implementations canâ€™t be restored from the persistent disk storage ; an empty public constructor is also needed. Tasks are executed on an ExecutorService serially by default (pool available), are managed primarily by the Activity lifecycle, and the Service MODE can be set to be considerate of Activity availability. Tasks manage a hard callback to post back to the ui thread of the current activity; the hard callback is gracefully managed to be considerate of references to avoid leaks, and also to always post back to the currently visible Activity. Tasks are considerate of onConfigurationChanges, and even will handle process termination. Please review the example activity test.taskexecutor.Example to see how the current implementation is configured.\n\nWith fully robust javadoc, and a cleanly implemented example activity implementation should be straight forward. Since I'm designing this library for personal use, I greatly welcome feedback and I guarantee you'll be surprised how fast I address issues :-)" android:layout_width="match_parent" android:layout_height="wrap_content" />
